/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
*
*	@output FeedFileWriter : Object
*	@output FeedFile : Object
*
*/

var system = require('dw/system');
var File = require('dw/io/File');
var FileWriter = require('dw/io/FileWriter');
var FileReader = require('dw/io/FileReader');
var StringUtils = require('dw/util/StringUtils');
var Calendar = require('dw/util/Calendar');
var Order = require('dw/order/Order');
var constants = require('./returnlyConstants');
var ArrayList = require('dw/util/ArrayList');

function execute(args) {
	var feedFile = createFeedFile();
	
	args.FeedFile = feedFile;
	args.FeedFileWriter = writeFeedHeader(feedFile);
	
	return PIPELET_NEXT;
}


function createFeedFile() {
	var dir = new File(constants.RETURNLY_IMPEX_PATH),
		fileName = getFileName();

	if (!dir.exists()){
		dir.mkdir();
	}
	var feedFile = new File(constants.RETURNLY_IMPEX_PATH + File.SEPARATOR  + fileName);
	feedFile.createNewFile();

	return feedFile;
}

/**
 * @description Generate file name for feed file
 * @returns {string}
 */
function getFileName() {
	var date = new Date(),
		fileDate = date.getUTCFullYear()+
			digit(date.getUTCMonth() + 1)+
			digit(date.getUTCDate())+
			digit(date.getUTCHours())+
			digit(date.getUTCMinutes());

	function digit(num) {
		return ("0" + num).slice(-2);
	}

	return constants.INSTANCE_TYPES_SHORT[system.System.instanceType] + '_' + system.Site.current.ID + '_orders_' + fileDate + '.json';
}

/**
 * @description Write to the Feed File "site" block
 * @param file
 * @returns writer {FileWriter}
 */
function writeFeedHeader(file) {
	var writer = FileWriter(file),
		feedHead = JSON.stringify(getFeedHeader());
	
		// remove last bracket of head block.
		writer.writeLine(feedHead.substring(0, feedHead.length - 2));

	return writer;
}

/**
 * @description Create json root block for feed with current site info
 * @returns {{site: {currency: *, locale: *, siteHostname: *, ID: *, name: *, creationDate: string, lastModified: string, timezone: *, customerServiceEmail: *, instanceHostname: *, instanceType: *}}}
 */
function getFeedHeader() {
	var site = system.Site.current;

	return {
		"site": {
			"currency": site.defaultCurrency,
			"locale": site.defaultLocale,
			"siteHostname": site.httpHostName,
			"ID": site.ID,
			"name": site.name,
			"creationDate": site.preferences.creationDate.toISOString(),
			"lastModified": site.preferences.lastModified.toISOString(),
			"timezone": site.timezone,
			"customerServiceEmail": site.getPreferences().getCustom()['customerServiceEmail'],
			"instanceHostname": system.System.getInstanceHostname(),
			"instanceType": constants.INSTANCE_TYPES[system.System.instanceType]
		},
		"orders": []
	}
}